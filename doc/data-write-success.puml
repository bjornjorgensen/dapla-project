@startuml

' Participants

participant "Notebook" as notebook
participant "Spark" as spark
participant "DataAccess" as data_access
database "GCS" as gcs
queue "App events" as appQ
queue "GCS events" as gcsQ
participant "UserAccess" as user_access
participant "MetadataDistributor" as distributor
queue "Catalog" as catalogQ
participant "Catalog" as catalog
queue "Lineage" as lineageQ
participant "Lineage" as lineage

' Flow

note left of spark
    write("/path/to/dataset")
end note

activate notebook
notebook->spark ++ : write( path, options )

== Metadata signing & access control ==

spark->data_access ++ : writeLocation( jwt, path, version, valuation, state )
spark-->notebook: logs
data_access->user_access ++ : hasAccess( user, WRITE, path, valuation, state )
return allowed
return allowed, metadata, signature
spark-->notebook: logs

== Write data and metadata to Cloud Storage ==

spark->data_access ++ : writeAccessToken( jwt, metadata, signature )
data_access -> data_access : validate \nmetadata & signature
data_access->user_access ++ : hasAccess( user, WRITE, path, valuation, state )
return allowed
return accessToken, ttl
|||
spark->gcs ++ : write .dataset-meta.json
return
gcs-->gcsQ ++ : event: metadata file created
gcsQ-->distributor ++
distributor->distributor: ignore
return ack
deactivate gcsQ

spark->gcs ++ : RDD write parquet files
return

gcs-->gcsQ ++ : events: parquet files created
gcsQ-->distributor ++
distributor->distributor: ignore
return ack
deactivate gcsQ

spark->gcs ++ : write .dataset-meta.json.sign
return
return logs
deactivate notebook

== Metadata propagation ==

gcs-->gcsQ ++ : event: signature file created
gcsQ-->distributor ++
distributor->gcs ++ : read metadata
return .dataset-meta.json
|||
distributor->gcs ++ : read signature
return .dataset-meta.json.sign
distributor->distributor : validate metadata\nand signature
distributor-->catalogQ: metadata
distributor-->lineageQ: metadata
return ack
deactivate gcsQ

catalogQ-->catalog ++
catalog->catalog: update
return ack

lineageQ-->lineage ++
lineage->lineage: update
return ack

@enduml