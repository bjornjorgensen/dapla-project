@startuml

hide stereotype

skinparam node {
	backgroundColor LightGreen
}

skinparam database {
	backgroundColor LightBlue
	backgroundColor<<existing>> transparent
}

skinparam queue {
	backgroundColor LightBlue
}

skinparam storage {
	backgroundColor LightBlue
}

skinparam component {
	backgroundColor transparent
}

node concept_lds [
  concept-lds
  ....
  docker.io/statisticsnorway/lds-server:1.0.3
  ....
]

database concept_psql [
  sagalog / tx-log
  ....
  postgres
]

node concept_neo4j [
  concept-neo4j
  ....
  docker.io/neo4j:4
  ....
]

storage concept_neo4j_volume [
  persistent-volume
  ....
  standard
]

concept_lds --> concept_psql
concept_lds --> concept_neo4j

concept_neo4j --> concept_neo4j_volume : /data


node exploration_lds [
  exploration-lds
  ....
  docker.io/statisticsnorway/lds-server:1.0.3
  ....
]

database exploration_psql [
  sagalog / tx-log
  ....
  postgres
]

node exploration_neo4j [
  exploration-neo4j
  ....
  docker.io/neo4j:4
  ....
]

storage exploration_neo4j_volume [
  persistent-volume
  ....
  standard
]

exploration_lds --> exploration_psql
exploration_lds --> exploration_neo4j

exploration_neo4j --> exploration_neo4j_volume : /data

node exploration_concept_ingest [
  exploration-concept-ingest
  ....
  eu.gcr.io/prod-bip/exploration_concept_ingest:1.0.0
]

exploration_concept_ingest --> exploration_lds : PUT\nsource=concept
exploration_concept_ingest --> concept_psql : txlog-consumer

node exploration_metadata_ingest [
  exploration-metadata-ingest
  ....
  eu.gcr.io/prod-bip/exploration_metadata_ingest:1.0.0
]

component "metadata-distributor" as distributor

queue "exploration-metadata" as exploration_metadata

database "GCS" as gcs <<existing>>

exploration_metadata <-- exploration_metadata_ingest : subscription:\nexploration-metadata-sub
exploration_metadata_ingest --> exploration_lds : PUT\nsource=metadata

distributor --> exploration_metadata : publish
distributor --> gcs : read

@enduml