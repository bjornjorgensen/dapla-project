@startuml

component "User Access" as user_access
component "Catalog" as catalog
component "Pseudonymization" as pseudo
component "Lineage" as lineage
component "Data Access" as data_access
database "Linked Data Store" as lds {
}
database "Google\nCloud Storage" as gcs {
}
node "Dataproc" <<Hadoop>> as dataproc {
  node "Worker" as worker1
  node "Worker" as worker2
  node "Worker" as worker3
  node "Worker" as worker4
}
component "Zeppelin" as zeppelin
catalog -> user_access
data_access --> catalog
data_access --> user_access

zeppelin -- dataproc
dataproc ----> gcs
dataproc ----> data_access

component "External\nDatasource" as source
component [Governor] as governor
queue "Google\nPubSub" as pubsub {
}
queue "Saga Log" as sagalog {
}
cloud Collection {
    component "Secure proxy" as sec_proxy {
        card "Client Certificate" as client_cert
    }
    component "Collector" as collector
    queue "Rawdata" as rawdata {
    }
    component "Converter" as converter
    collector -u-> sec_proxy
    collector ..> rawdata : payload-\nencryption
    converter ..> rawdata
    converter -> gcs : "      write"
    converter --> pseudo
}

governor --> gcs
governor --> lineage
governor --> catalog
gcs .> pubsub : object-created
governor .> pubsub : subscribe
governor -> sagalog : append
governor ---> lds
sec_proxy -u-> source

@enduml