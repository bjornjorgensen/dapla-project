@startuml

component "User Access" as user_access
component "Catalog" as catalog
component "Pseudonymization" as pseudo
component "Lineage" as lineage
component "Data Access" as data_access
database "Linked Data Store" as lds {
}
database "Google\nCloud Storage" as gcs {
}
node "Dataproc" <<Hadoop>> as dataproc {
  node "Worker" as worker1
  node "Worker" as worker2
  node "Worker" as worker3
  node "Worker" as worker4
}
component "Zeppelin" as zeppelin
catalog -> user_access
data_access --> catalog
data_access --> user_access

database "GitHub" as github

zeppelin -- dataproc
zeppelin -> github
dataproc ----> gcs : \n\nread/\nwrite
dataproc ----> data_access : get GCS\ntoken

component "External\nDatasource" as source
component "Metadata\nDistributor" as distributor
queue "GCS\nEvents" as gcsevents {
}
queue "Catalog\nMetadata" as catalogQ {
}
queue "LDS\nMetadata" as ldsQ {
}
queue "Lineage\nMetadata" as lineageQ {
}
cloud Collection {
    component "Secure proxy" as sec_proxy {
        card "Client Certificate" as client_cert
    }
    component "Collector" as collector
    queue "Rawdata" as rawdata {
    }
    component "Converter" as converter
    collector -u-> sec_proxy
    collector ..> rawdata : payload-\nencryption
    converter ..> rawdata
    converter -> gcs : "      write"
    converter --> pseudo
}

distributor --> gcs : read
distributor ..> lineageQ : pub
distributor ..> catalogQ : pub
distributor ..> ldsQ : pub
gcs .> gcsevents : object-created
distributor .> gcsevents : sub
lds .u.> ldsQ : sub
catalog .u.> catalogQ : sub
lineage .u.> lineageQ : sub
sec_proxy .u.> source

@enduml